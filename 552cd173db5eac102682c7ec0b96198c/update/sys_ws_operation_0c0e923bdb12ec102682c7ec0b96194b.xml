<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>false</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>Get Operations</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	//TODO: put the web service transaction stuff into a script include 
	// set run as 

	// Insert record into transaction table 
    var wsTrans = new GlideRecord('u_web_service_transaction');
    wsTrans.initialize();

	// set direction
	wsTrans.u_direction = 'Inbound';
	var reqBody = request.body;
	
// set structure and transaction object 
	var p = {'stuff':'things'};
	//wsTrans.u_payload_data_structure = JSON.stringify(p)
	//wsTrans.setValue('u_trans_object',JSON.stringify(p);

	wsTrans.setValue('u_resource','0c0e923bdb12ec102682c7ec0b96194b');
	wsTrans.setValue('u_payload_string', JSON.stringify(reqBody));

	// set request url 
	wsTrans.u_request_url = request.getHeader('Host');
    var transaction = wsTrans.insert();

    // query scripted rest resource 
    var grResources = new GlideRecord('sys_ws_operation');
    grResources.addQuery('web_service_definition=aabf4a3fdbdeac102682c7ec0b961991^active=true');
    grResources.query();
    // Add each resource to response object
    var responseObj = {
        "base": "api/appri/snow",
        "operations": [
           ]
    };

    while (grResources.next()) {

		var method = {
            "name": grResources.getValue('name'),
            "method": grResources.getValue('http_method'),
            "short_description": grResources.getValue('short_description'),
            "relative_path": grResources.getValue('relative_path'),
            "supported_request_formats": grResources.getValue('consumes'),
            "supported_response_formats": grResources.getValue('produces'),
            "request_example": grResources.getDisplayValue('request_example')
			// results in failure JSON.parse(grResources.getValue('request_example'))
			// newlines JSON.stringify(grResources.getValue('request_example'))
        };
		

		responseObj.operations.push(method);
    }
return responseObj;
})(request, response);]]></operation_script>
        <operation_uri>/api/appri/snow/operations</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/operations</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>llapid</sys_created_by>
        <sys_created_on>2021-02-20 02:49:33</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>0c0e923bdb12ec102682c7ec0b96194b</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>Get Operations</sys_name>
        <sys_package display_value="integreat" source="552cd173db5eac102682c7ec0b96198c">552cd173db5eac102682c7ec0b96198c</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="integreat">552cd173db5eac102682c7ec0b96198c</sys_scope>
        <sys_update_name>sys_ws_operation_0c0e923bdb12ec102682c7ec0b96194b</sys_update_name>
        <sys_updated_by>llapid</sys_updated_by>
        <sys_updated_on>2021-03-11 02:59:14</sys_updated_on>
        <web_service_definition display_value="snow">aabf4a3fdbdeac102682c7ec0b961991</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
